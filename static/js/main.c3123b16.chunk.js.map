{"version":3,"sources":["components/Form/Form.module.css","components/container.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","addForm","type","pattern","title","required","onChange","Component","ContactsList","contacts","onDeleteContact","ContactList","map","id","ContactsList__btn","onClick","Filter","label","input","App","filter","addContact","find","contact","alert","shortid","generate","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","nextContacts","setItem","stringify","visibleContact","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3123b16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"Form_addForm__p7YSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__WrP-t\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    // console.log(\"reset is working\");\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.addForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  // console.log(contacts);\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.ContactsList__btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport styles from \"./components/container.module.css\";\nimport shortid from \"shortid\";\nimport ContactsList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n      // console.log(this.state);\n    }\n  }\n  componentDidUpdate(prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name}  is alredy in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  render() {\n    // const { contacts } = this.state;\n    const visibleContact = this.getVisibleContacts();\n    return (\n      <section className={styles.container}>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contact List</h2>\n\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContact}\n          onDeleteContact={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3wI9T\",\"ContactsList__btn\":\"ContactList_ContactsList__btn__3J0ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1nkQW\",\"input\":\"Filter_input__3bsmU\"};"],"sourceRoot":""}